name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write
  packages: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21.3"
      - name: install dependencies
        run: go mod download
      - name: verify dependencies
        run: go mod verify
      - name: lint
        run: go vet ./...
  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21.3"
      - name: install dependencies
        run: go mod download
      - name: verify dependencies
        run: go mod verify
      - name: build
        run: go build -tags=jsoniter -o app .

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21.3"
      - name: warning
        run: echo "Reminder to create test cases"
      - name: install dependencies
        run: go mod download
      - name: verify dependencies
        run: go mod verify
      - name: test
        run: go test -v ./...

  cross-build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          [
            ["darwin", "amd64"],
            ["darwin", "arm64"],
            ["freebsd", "386"],
            ["freebsd", "amd64"],
            ["freebsd", "arm"],
            ["js", "wasm"],
            ["linux", "386"],
            ["linux", "amd64"],
            ["linux", "arm"],
            ["linux", "arm64"],
            ["windows", "386"],
            ["windows", "amd64"],
            ["windows", "arm"],
            ["windows", "arm64"],
          ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21.3"
      - name: install dependencies
        run: go mod download
      - name: verify dependencies
        run: go mod verify
      - name: cross-build
        run: |
          export GOOS=${{ matrix.platform[0] }}
          export GOARCH=${{ matrix.platform[1] }}

          go build -tags=jsoniter -o dist/$GOOS_$GOARCH .
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: go-todo-api-${{ matrix.platform[0] }}_${{ matrix.platform[1] }}
          path: dist/**

  release:
    needs: cross-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: TriPSs/conventional-changelog-action@v4
        id: changelog
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: softprops/action-gh-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          prerelease: false
          draft: false
          files: dist/*
          generate_release_notes: true
          name: ${{ steps.changelog.outputs.tag }}
          append_body: |
            ## ðŸ¤– Autogenerated Conventional Changelog

            ${{ steps.changelog.outputs.clean_changelog }}
      - name: docker build
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: docker build -t go-todo-api .
      - name: login docker.io
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: login ghcr.io
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_REPOSITORY_OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v3
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        id: meta
        with:
          images: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/go-todo-api
            ghcr.io/${{ github.repository }}
          tags: |
            latest
            ${{ steps.changelog.outputs.tag }}
      - uses: docker/build-push-action@v2
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
